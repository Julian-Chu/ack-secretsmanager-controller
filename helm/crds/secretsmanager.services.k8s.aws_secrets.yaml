---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: secrets.secretsmanager.services.k8s.aws
spec:
  group: secretsmanager.services.k8s.aws
  names:
    kind: Secret
    listKind: SecretList
    plural: secrets
    singular: secret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Secret is the Schema for the Secrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretSpec defines the desired state of Secret.
            properties:
              addReplicaRegions:
                description: A list of Regions and KMS keys to replicate secrets.
                items:
                  description: A custom type that specifies a Region and the KmsKeyId
                    for a replica secret.
                  properties:
                    kmsKeyID:
                      type: string
                    region:
                      type: string
                  type: object
                type: array
              clientRequestToken:
                description: "If you include SecretString or SecretBinary, then Secrets
                  Manager creates an initial version for the secret, and this parameter
                  specifies the unique identifier for the new version. \n If you use
                  the Amazon Web Services CLI or one of the Amazon Web Services SDKs
                  to call this operation, then you can leave this parameter empty.
                  The CLI or SDK generates a random UUID for you and includes it as
                  the value for this parameter in the request. If you don't use the
                  SDK and instead generate a raw HTTP request to the Secrets Manager
                  service endpoint, then you must generate a ClientRequestToken yourself
                  for the new version and include the value in the request. \n This
                  value helps ensure idempotency. Secrets Manager uses this value
                  to prevent the accidental creation of duplicate versions if there
                  are failures and retries during a rotation. We recommend that you
                  generate a UUID-type (https://wikipedia.org/wiki/Universally_unique_identifier)
                  value to ensure uniqueness of your versions within the specified
                  secret. \n - If the ClientRequestToken value isn't already associated
                  with a version of the secret then a new version of the secret is
                  created. \n - If a version with this value already exists and the
                  version SecretString and SecretBinary values are the same as those
                  in the request, then the request is ignored. \n - If a version with
                  this value already exists and that version's SecretString and SecretBinary
                  values are different from those in the request, then the request
                  fails because you cannot modify an existing version. Instead, use
                  PutSecretValue to create a new version. \n This value becomes the
                  VersionId of the new version."
                type: string
              description:
                description: The description of the secret.
                type: string
              forceOverwriteReplicaSecret:
                description: Specifies whether to overwrite a secret with the same
                  name in the destination Region. By default, secrets aren't overwritten.
                type: boolean
              kmsKeyID:
                description: "The ARN, key ID, or alias of the KMS key that Secrets
                  Manager uses to encrypt the secret value in the secret. An alias
                  is always prefixed by alias/, for example alias/aws/secretsmanager.
                  For more information, see About aliases (https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html).
                  \n To use a KMS key in a different account, use the key ARN or the
                  alias ARN. \n If you don't specify this value, then Secrets Manager
                  uses the key aws/secretsmanager. If that key doesn't yet exist,
                  then Secrets Manager creates it for you automatically the first
                  time it encrypts the secret value. \n If the secret is in a different
                  Amazon Web Services account from the credentials calling the API,
                  then you can't use aws/secretsmanager to encrypt the secret, and
                  you must create and use a customer managed KMS key."
                type: string
              name:
                description: "The name of the new secret. \n The secret name can contain
                  ASCII letters, numbers, and the following characters: /_+=.@- \n
                  Do not end your secret name with a hyphen followed by six characters.
                  If you do so, you risk confusion and unexpected results when searching
                  for a secret by partial ARN. Secrets Manager automatically adds
                  a hyphen and six random characters after the secret name at the
                  end of the ARN."
                type: string
              secretBinary:
                description: "The binary data to encrypt and store in the new version
                  of the secret. We recommend that you store your binary data in a
                  file and then pass the contents of the file as a parameter. \n Either
                  SecretString or SecretBinary must have a value, but not both. \n
                  This parameter is not available in the Secrets Manager console."
                format: byte
                type: string
              secretString:
                description: "The text data to encrypt and store in this new version
                  of the secret. We recommend you use a JSON structure of key/value
                  pairs for your secret value. \n Either SecretString or SecretBinary
                  must have a value, but not both. \n If you create a secret by using
                  the Secrets Manager console then Secrets Manager puts the protected
                  secret text in only the SecretString parameter. The Secrets Manager
                  console stores the information as a JSON structure of key/value
                  pairs that a Lambda rotation function can parse."
                type: string
              tags:
                description: "A list of tags to attach to the secret. Each tag is
                  a key and value pair of strings in a JSON text string, for example:
                  \n [{\"Key\":\"CostCenter\",\"Value\":\"12345\"},{\"Key\":\"environment\",\"Value\":\"production\"}]
                  \n Secrets Manager tag key names are case sensitive. A tag with
                  the key \"ABC\" is a different tag from one with key \"abc\". \n
                  If you check tags in permissions policies as part of your security
                  strategy, then adding or removing a tag can change permissions.
                  If the completion of this operation would result in you losing your
                  permissions for this secret, then Secrets Manager blocks the operation
                  and returns an Access Denied error. For more information, see Control
                  access to secrets using tags (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac)
                  and Limit access to identities with tags that match secrets' tags
                  (https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2).
                  \n For information about how to format a JSON parameter for the
                  various command line tool environments, see Using JSON for Parameters
                  (https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json).
                  If your command-line tool or SDK requires quotation marks around
                  the parameter, you should use single quotes to avoid confusion with
                  the double quotes required in the JSON text. \n The following restrictions
                  apply to tags: \n - Maximum number of tags per secret: 50 \n - Maximum
                  key length: 127 Unicode characters in UTF-8 \n - Maximum value length:
                  255 Unicode characters in UTF-8 \n - Tag keys and values are case
                  sensitive. \n - Do not use the aws: prefix in your tag names or
                  values because Amazon Web Services reserves it for Amazon Web Services
                  use. You can't edit or delete tag names or values with this prefix.
                  Tags with this prefix do not count against your tags per secret
                  limit. \n - If you use your tagging schema across multiple services
                  and resources, other services might have restrictions on allowed
                  characters. Generally allowed characters: letters, spaces, and numbers
                  representable in UTF-8, plus the following special characters: +
                  - = . _ : / @."
                items:
                  description: A structure that contains information about a tag.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: SecretStatus defines the observed state of Secret
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              replicationStatus:
                description: "A list of the replicas of this secret and their status:
                  \n * Failed, which indicates that the replica was not created. \n
                  * InProgress, which indicates that Secrets Manager is in the process
                  of creating the replica. \n * InSync, which indicates that the replica
                  was created."
                items:
                  description: A replication object consisting of a RegionReplicationStatus
                    object and includes a Region, KMSKeyId, status, and status message.
                  properties:
                    kmsKeyID:
                      type: string
                    lastAccessedDate:
                      format: date-time
                      type: string
                    region:
                      type: string
                    status:
                      type: string
                    statusMessage:
                      type: string
                  type: object
                type: array
              versionID:
                description: The unique identifier associated with the version of
                  the new secret.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
